// <auto-generated />
using System;
using MVC_Task2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Task2.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20241003050206_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVC_Task2.Models.Department", b =>
                {
                    b.Property<long>("DNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DNumber"), 1L, 1);

                    b.Property<string>("DName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MgrDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mgrSSN")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DNumber");

                    b.HasIndex("mgrSSN");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dependent", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ESSN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name", "ESSN");

                    b.HasIndex("ESSN");

                    b.ToTable("Dependents");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dept_Locations", b =>
                {
                    b.Property<long?>("Dnum")
                        .HasColumnType("bigint");

                    b.Property<string>("locations")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Dnum", "locations");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Dnum")
                        .HasColumnType("bigint");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Minit")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("superSSN")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SSN");

                    b.HasIndex("Dnum");

                    b.HasIndex("superSSN");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.Property<string>("PNum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("Dnum")
                        .HasColumnType("bigint");

                    b.Property<string>("PName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PNum");

                    b.HasIndex("Dnum");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MVC_Task2.Models.Works_on", b =>
                {
                    b.Property<string>("ESSN")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Pnum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ESSN", "Pnum");

                    b.HasIndex("Pnum");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("MVC_Task2.Models.Department", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("mgrSSN");

                    b.Navigation("employee");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dependent", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "employee")
                        .WithMany("dependent")
                        .HasForeignKey("ESSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");
                });

            modelBuilder.Entity("MVC_Task2.Models.Dept_Locations", b =>
                {
                    b.HasOne("MVC_Task2.Models.Department", "department")
                        .WithMany("Locations")
                        .HasForeignKey("Dnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.HasOne("MVC_Task2.Models.Department", "Dept")
                        .WithMany("employees")
                        .HasForeignKey("Dnum");

                    b.HasOne("MVC_Task2.Models.Employee", "Supervisor")
                        .WithMany("group")
                        .HasForeignKey("superSSN");

                    b.Navigation("Dept");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.HasOne("MVC_Task2.Models.Department", "department")
                        .WithMany("project")
                        .HasForeignKey("Dnum");

                    b.Navigation("department");
                });

            modelBuilder.Entity("MVC_Task2.Models.Works_on", b =>
                {
                    b.HasOne("MVC_Task2.Models.Employee", "employee")
                        .WithMany("works")
                        .HasForeignKey("ESSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVC_Task2.Models.Project", "project")
                        .WithMany("work")
                        .HasForeignKey("Pnum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("employee");

                    b.Navigation("project");
                });

            modelBuilder.Entity("MVC_Task2.Models.Department", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("employees");

                    b.Navigation("project");
                });

            modelBuilder.Entity("MVC_Task2.Models.Employee", b =>
                {
                    b.Navigation("dependent");

                    b.Navigation("group");

                    b.Navigation("works");
                });

            modelBuilder.Entity("MVC_Task2.Models.Project", b =>
                {
                    b.Navigation("work");
                });
#pragma warning restore 612, 618
        }
    }
}
